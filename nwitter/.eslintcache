[{"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/index.js":"1","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/App.js":"2","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Router.js":"3","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Home.js":"4","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Auth.js":"5","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/fbase.js":"6","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Navigation.js":"7","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Profile.js":"8","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Nweet.js":"9","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/index.js":"10","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/fbase.js":"11","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/App.js":"12","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Router.js":"13","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js":"14","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Home.js":"15","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Navigation.js":"16","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Profile.js":"17","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Nweet.js":"18","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/NweetFactory.js":"19","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/AuthForm.js":"20"},{"size":242,"mtime":1610654902269,"results":"21","hashOfConfig":"22"},{"size":1490,"mtime":1611363755262,"results":"23","hashOfConfig":"22"},{"size":938,"mtime":1611363794177,"results":"24","hashOfConfig":"22"},{"size":3855,"mtime":1611102442315,"results":"25","hashOfConfig":"22"},{"size":2477,"mtime":1610997038059,"results":"26","hashOfConfig":"22"},{"size":1208,"mtime":1611096439218,"results":"27","hashOfConfig":"22"},{"size":318,"mtime":1611360694606,"results":"28","hashOfConfig":"22"},{"size":1299,"mtime":1611363825884,"results":"29","hashOfConfig":"22"},{"size":1913,"mtime":1611028320354,"results":"30","hashOfConfig":"22"},{"size":233,"mtime":1611610761927,"results":"31","hashOfConfig":"32"},{"size":1208,"mtime":1611096439218,"results":"33","hashOfConfig":"32"},{"size":1486,"mtime":1611605081622,"results":"34","hashOfConfig":"32"},{"size":1099,"mtime":1611610769740,"results":"35","hashOfConfig":"32"},{"size":1332,"mtime":1611610897734,"results":"36","hashOfConfig":"32"},{"size":1093,"mtime":1611610937672,"results":"37","hashOfConfig":"32"},{"size":1145,"mtime":1611610303473,"results":"38","hashOfConfig":"32"},{"size":1579,"mtime":1611611040994,"results":"39","hashOfConfig":"32"},{"size":2313,"mtime":1611610437127,"results":"40","hashOfConfig":"32"},{"size":2758,"mtime":1611610613888,"results":"41","hashOfConfig":"32"},{"size":1776,"mtime":1611610189930,"results":"42","hashOfConfig":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"16vufys",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7sbkxi",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/index.js",["90"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from './fbase';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["91","92"],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/App.js",["93"],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Router.js",["94"],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Home.js",["95","96"],"import React,{ useState, useEffect }  from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";      // image's unique identifier \nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\n\nconst Home = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\"); // image \n\n    /*\n      const getNweets = async () => {\n        // firebase database에서 \"nweets\"라는 collection를 가지고 온다. get()이라는 함수를 사용 \n        // https://firebase.google.com/docs/firestore/query-data/get-data\n        const dbNweets = await dbService.collection(\"nweets\").get(); \n        dbNweets.forEach((document) => {\n          // nweetObject를 만들어서 \n          const nweetObject = {\n            ...document.data(),\n            id: document.id,\n          };\n          setNweets( (prev) => [nweetObject, ...prev] );\n        });\n      };\n    */\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map\n            ( \n                (doc) => \n                    ({\n                        id: doc.id,\n                        ...doc.data(),\n                    })\n            );\n            console.log ( nweetArray)\n            setNweets(nweetArray);\n            });\n    }, []);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment != \"\") {\n          const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n          const response = await attachmentRef.putString(attachment, \"data_url\");\n          attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n          text : nweet,\n          createdAt: Date.now(),\n          creatorId: userObj.uid,\n          attachmentUrl\n        }// nweet obj \n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    //console.log(nweets);\n\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n      const {\n        target: { files },\n      } = event;\n\n      // evnet 안에서 target 안으로 가서 파일을 받아 온다. \n      const theFile = files[0];                 //In the  \"file\", just bring the first one. \n      const reader = new FileReader();          // fileReader API, 사용자가 올린 이미지(파일)을 읽기 위한 변수\n      reader.onloadend = (finishedEvent) => {   // reader에 event listener를 추가\n        const {\n          currentTarget: { result },\n        } = finishedEvent;\n        setAttachment(result);\n      };\n      reader.readAsDataURL(theFile); // 최종적으로 데이터를 가지고 올수 있음 \n    };\n    const onClearAttachment = () => setAttachment(null);\n\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}/>\n          <input type =\"file\" accept = \"image/*\" onChange = {onFileChange}/>\n          <input type=\"submit\" value=\"Nweet\" />\n          {attachment && (\n          <div>\n            <img src={attachment} width=\"300px\" height=\"200px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n        </form>\n        <div>\n            {nweets.map((nweet) => (\n            < Nweet \n                key ={nweet.id} \n                nweetObj={nweet} \n                isOwner={nweet.creatorId === userObj.uid} \n            />\n        ))}\n      </div>\n      </div>\n    );\n  };\n  export default Home;","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Auth.js",["97"],"import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\n {/* Comment out here */}\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    \n    const onChange = (event) => {\n      const {\n        target: { name, value },\n      } = event;\n      if (name === \"email\") {\n        setEmail(value);\n      } else if (name === \"password\") {\n        setPassword(value);\n      }\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        let data;\n        if (newAccount) {\n          data = await authService.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n        } else {\n          data = await authService.signInWithEmailAndPassword(email, password);\n        }\n        console.log(data);\n      } catch (error) {\n          setError(error.message);\n      }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    \n    const onSocialClick = async (event) => {\n      try { \n        const {\n          target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n          provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n      }catch(error){\n        setError(error.message);\n      }\n    };\n\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n          <input\n            name=\"password\"type=\"password\"placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}/>\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Create Account\" : \"Sign In\"}/>\n            {error}\n\n        </form>\n        <span onClick={toggleAccount}>\n          {newAccount ? \"Sign In\" : \"Create Account\"}\n        </span>\n        <div>\n          <button onClick={onSocialClick} name=\"google\"> Continue with Google </button>\n          <button onClick={onSocialClick} name=\"github\"> Continue with Github </button>\n        </div>\n      </div>\n    );\n};\nexport default Auth;","/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/fbase.js",[],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Navigation.js",[],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Profile.js",["98","99"],"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/Nweet.js",["100"],"import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this posting?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();    // 파이어베이스에서 해당 포스팅 내용 삭제\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 이미지를 firebase에 보내고, firebase 내부에서 사진을 지울때 사용. \n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>   {/*  */}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/index.js",[],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/fbase.js",[],["101","102"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/App.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  /*\n      사용자가 로그인 하게 되면 In App.js, onAuthStateChanged가 가장 먼저 콜 된다. \n      그러면 로그인 한 사용자에 대한 정보를 받을 수 있다. setUserObj를 사용해서 userObj에 \n      사용자에 대한 정보를 저장한다. \n  */ \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      //console.log (userObj.uid )\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return < >\n    {init ? (        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />) \n        :   (\"Initializing...\")}\n\n    \n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n  </>\n}\n\nexport default App;\n","/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Router.js",["104"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js",[],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Home.js",["105"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Navigation.js",[],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Profile.js",["106","107"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Nweet.js",["108"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/NweetFactory.js",["109"],"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/AuthForm.js",[],{"ruleId":"110","severity":1,"message":"111","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":16},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"110","severity":1,"message":"118","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"119","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":45,"column":24,"nodeType":"122","messageId":"123","endLine":45,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":103,"column":13,"nodeType":"126","endLine":103,"endColumn":66},{"ruleId":"127","severity":1,"message":"128","line":3,"column":2,"nodeType":"129","messageId":"130","endLine":3,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":5,"column":1,"nodeType":"133","endLine":50,"endColumn":5},{"ruleId":"127","severity":1,"message":"134","line":16,"column":5,"nodeType":"129","messageId":"135","endLine":16,"endColumn":112},{"ruleId":"124","severity":1,"message":"125","line":49,"column":13,"nodeType":"126","endLine":49,"endColumn":76},{"ruleId":"114","replacedBy":"136"},{"ruleId":"116","replacedBy":"137"},{"ruleId":"110","severity":1,"message":"118","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"119","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"138","line":2,"column":21,"nodeType":"112","messageId":"113","endLine":2,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":5,"column":1,"nodeType":"133","endLine":61,"endColumn":5},{"ruleId":"127","severity":1,"message":"134","line":16,"column":5,"nodeType":"129","messageId":"135","endLine":16,"endColumn":112},{"ruleId":"124","severity":1,"message":"125","line":53,"column":38,"nodeType":"126","endLine":53,"endColumn":74},{"ruleId":"124","severity":1,"message":"125","line":82,"column":11,"nodeType":"126","endLine":87,"endColumn":13},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'isLoggedIn' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Nested block is redundant.","redundantNestedBlock",["139"],["140"],"'storageService' is defined but never used.","no-global-assign","no-unsafe-negation"]