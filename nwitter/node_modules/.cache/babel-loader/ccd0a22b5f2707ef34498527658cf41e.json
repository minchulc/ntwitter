{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\n{\n  /* Comment out here */\n}\n\nconst Auth = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSocialClick = async event => {\n    try {\n      const {\n        target: {\n          name\n        }\n      } = event;\n      let provider;\n\n      if (name === \"google\") {\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n      } else if (name === \"github\") {\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n      }\n\n      const data = await authService.signInWithPopup(provider);\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Sign In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \" Continue with Google \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \" Continue with Github \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js"],"names":["React","useState","authService","firebaseInstance","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\n {/* Comment out here */}\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    \n    const onChange = (event) => {\n      const {\n        target: { name, value },\n      } = event;\n      if (name === \"email\") {\n        setEmail(value);\n      } else if (name === \"password\") {\n        setPassword(value);\n      }\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        let data;\n        if (newAccount) {\n          data = await authService.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n        } else {\n          data = await authService.signInWithEmailAndPassword(email, password);\n        }\n        console.log(data);\n      } catch (error) {\n          setError(error.message);\n      }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    \n    const onSocialClick = async (event) => {\n      try { \n        const {\n          target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n          provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n      }catch(error){\n        setError(error.message);\n      }\n    };\n\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n          <input\n            name=\"password\"type=\"password\"placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}/>\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Create Account\" : \"Sign In\"}/>\n            {error}\n\n        </form>\n        <span onClick={toggleAccount}>\n          {newAccount ? \"Sign In\" : \"Create Account\"}\n        </span>\n        <div>\n          <button onClick={onSocialClick} name=\"google\"> Continue with Google </button>\n          <button onClick={onSocialClick} name=\"github\"> Continue with Github </button>\n        </div>\n      </div>\n    );\n};\nexport default Auth;"]},"metadata":{},"sourceType":"module"}