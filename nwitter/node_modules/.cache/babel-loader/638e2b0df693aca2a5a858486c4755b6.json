{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Nweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({\n  nweetObj,\n  isOwner\n}) => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this posting?\");\n\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); // 파이어베이스에서 해당 포스팅 내용 삭제\n\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 이미지를 firebase에 보내고, firebase 내부에서 사진을 지울때 사용. \n    }\n  };\n\n  const toggleEditing = () => setEditing(prev => !prev);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing(false);\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewNweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Edit your nweet\",\n          value: newNweet,\n          required: true,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEditing,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \"   \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: nweetObj.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), nweetObj.attachmentUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nweetObj.attachmentUrl,\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), \"          \", isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDeleteClick,\n          children: \"Delete Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleEditing,\n          children: \"Edit Nweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nweet, \"ZsFpsd+1jsV0959xbhQ2jq8vErk=\");\n\n_c = Nweet;\nexport default Nweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nweet\");","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/components/Nweet.js"],"names":["React","useState","dbService","storageService","Nweet","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","text","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","onChange","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,OAA1C;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACI,QAAQ,CAACM,IAAV,CAAxC;;AACA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAX;;AACA,QAAIF,EAAJ,EAAQ;AACN,YAAMX,SAAS,CAACc,GAAV,CAAe,UAASX,QAAQ,CAACY,EAAG,EAApC,EAAuCC,MAAvC,EAAN,CADM,CACoD;;AAC1D,YAAMf,cAAc,CAACgB,UAAf,CAA0Bd,QAAQ,CAACe,aAAnC,EAAkDF,MAAlD,EAAN,CAFM,CAE4D;AACnE;AACF,GAND;;AAOA,QAAMG,aAAa,GAAG,MAAMb,UAAU,CAAEc,IAAD,IAAU,CAACA,IAAZ,CAAtC;;AACA,QAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMvB,SAAS,CAACc,GAAV,CAAe,UAASX,QAAQ,CAACY,EAAG,EAApC,EAAuCS,MAAvC,CAA8C;AAClDf,MAAAA,IAAI,EAAEF;AAD4C,KAA9C,CAAN;AAGAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;;AAOA,QAAMmB,QAAQ,GAAIH,KAAD,IAAW;AAC1B,UAAM;AACJI,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFL,KAFJ;AAGAd,IAAAA,WAAW,CAACmB,KAAD,CAAX;AACD,GALD;;AAMA,sBACE;AAAA,cACGtB,OAAO,gBACN;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEgB,QAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,iBAFd;AAGE,UAAA,KAAK,EAAEd,QAHT;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,QAAQ,EAAEkB;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAQ,QAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,oBADM,gBAeN;AAAA,8BACE;AAAA,kBAAKhB,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,QAAQ,CAACe,aAAT,iBACC;AAAK,QAAA,GAAG,EAAEf,QAAQ,CAACe,aAAnB;AAAkC,QAAA,KAAK,EAAC,MAAxC;AAA+C,QAAA,MAAM,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHJ,gBAIed,OAAO,iBAClB;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAES,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBALJ;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAvDD;;GAAMjB,K;;KAAAA,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this posting?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();    // 파이어베이스에서 해당 포스팅 내용 삭제\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 이미지를 firebase에 보내고, firebase 내부에서 사진을 지울때 사용. \n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>   {/*  */}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n"]},"metadata":{},"sourceType":"module"}