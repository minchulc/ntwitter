{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nexport default _s(({\n  refreshUser,\n  userObj\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName); //console.log ( userObj.uid ) \n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\"); // hooks , react-router-domf\n  };\n\n  {\n    /*  Using \"where\"(need three inputs), get current user information(filtering) and we can compare them. */\n  }\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      });\n      refreshUser();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"Display name\",\n        value: newDisplayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogOutClick,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"1jfk4R6tEsBwxPUraLQj5/toPI0=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Profile.js"],"names":["React","useState","authService","useHistory","refreshUser","userObj","history","newDisplayName","setNewDisplayName","displayName","onLogOutClick","signOut","push","onChange","event","target","value","onSubmit","preventDefault","updateProfile"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,kBAAe,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAAA;;AACzC,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAACI,OAAO,CAACI,WAAT,CAApD,CAFyC,CAIzC;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BR,IAAAA,WAAW,CAACS,OAAZ;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb,EAF0B,CAEN;AACrB,GAHD;;AAMA;AAAC;AAA0G;;AAC3G,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAN,IAAAA,iBAAiB,CAACQ,KAAD,CAAjB;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIb,OAAO,CAACI,WAAR,KAAwBF,cAA5B,EAA4C;AAC1C,YAAMF,OAAO,CAACc,aAAR,CAAsB;AAC1BV,QAAAA,WAAW,EAAEF;AADa,OAAtB,CAAN;AAGAH,MAAAA,WAAW;AAEZ;AACF,GATD;;AAWA,sBACE;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAEa,QAAhB;AAAA,8BACE;AACE,QAAA,QAAQ,EAAEJ,QADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,KAAK,EAAEN;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAWA;AAAQ,MAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADF;AAeD,CA7CH;AAAA,UACoBP,UADpB;AAAA","sourcesContent":["import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    //console.log ( userObj.uid ) \n    const onLogOutClick = () => {\n      authService.signOut();\n      history.push(\"/\");  // hooks , react-router-domf\n    };\n\n\n    {/*  Using \"where\"(need three inputs), get current user information(filtering) and we can compare them. */}\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (userObj.displayName !== newDisplayName) {\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n        refreshUser();\n\n      }\n    };\n\n    return (\n      <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      \n      <button onClick={onLogOutClick}>Log Out</button>\n      </>\n    );\n  };"]},"metadata":{},"sourceType":"module"}