{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  _s();\n\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  /*\n      사용자가 로그인 하게 되면 In App.js, onAuthStateChanged가 가장 먼저 콜 된다. \n      그러면 로그인 한 사용자에 대한 정보를 받을 수 있다. setUserObj를 사용해서 userObj에 \n      사용자에 대한 정보를 저장한다. \n  */\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn,\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this) : \"Initializing...\", \"console.log (userObj.uid )\", /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Nwitter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"+8UWPZeDHvBWUbvjuGH9aya/3CQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/components/App.js"],"names":["React","useState","useEffect","AppRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user","Date","getFullYear"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEA;AACF;AACA;AACA;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACQ,kBAAZ,CAAgCC,IAAD,IAAU;AACvC,UAAIA,IAAJ,EAAU;AACRJ,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,UAAU,CAACE,IAAD,CAAV;AACD,OAHD,MAGO;AACLJ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACDF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBAAO;AAAA,eACJD,IAAI,gBAAI,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE,UAAvB;AAAmC,MAAA,OAAO,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAJ,GACI,iBAFJ,6CAKL;AAAA,0BAAgB,IAAII,IAAJ,GAAWC,WAAX,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALK;AAAA,kBAAP;AAOD;;GA5BQV,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  /*\n      사용자가 로그인 하게 되면 In App.js, onAuthStateChanged가 가장 먼저 콜 된다. \n      그러면 로그인 한 사용자에 대한 정보를 받을 수 있다. setUserObj를 사용해서 userObj에 \n      사용자에 대한 정보를 저장한다. \n  */ \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return < >\n    {init ? (<AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />) \n        :   (\"Initializing...\")}\n\n    console.log (userObj.uid )\n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n  </>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}