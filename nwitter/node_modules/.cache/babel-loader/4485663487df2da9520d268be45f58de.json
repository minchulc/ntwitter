{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\n{\n  /* Comment out here */\n}\n\nconst Home = ({\n  userObj\n}) => {\n  _s();\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  /*\n  const getNweets = async () => {\n    // firebase database에서 \"nweets\"라는 collection를 가지고 온다. get()이라는 함수를 사용 \n    // https://firebase.google.com/docs/firestore/query-data/get-data\n    const dbNweets = await dbService.collection(\"nweets\").get(); \n    dbNweets.forEach((document) => {\n      // nweetObject를 만들어서 \n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets( (prev) => [nweetObject, ...prev] );\n    });\n  };\n  */\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log(nweetArray);\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid\n    });\n    setNweet(\"\");\n  }; //console.log(nweets);\n\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: nweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => /*#__PURE__*/_jsxDEV(Nweet, {\n        nweetObj: nweet,\n        isOwner: nweet.creatorId === userObj.uid\n      }, nweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Home, \"IALbbgkikD84dCoZ0+ewUlggGfA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitter/nwitter/src/routes/Home.js"],"names":["React","useState","useEffect","dbService","Home","userObj","nweet","setNweet","nweets","setNweets","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","console","log","onSubmit","event","preventDefault","add","text","createdAt","Date","now","creatorId","uid","onChange","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACE;AAAC;AAAuB;;AAC1B,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,SAAS,CAACO,UAAV,CAAqB,QAArB,EAA+BC,UAA/B,CAA2CC,QAAD,IAAc;AACpD,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAEdC,GAAD,KACK;AACGC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADX;AAEG,WAAGD,GAAG,CAACE,IAAJ;AAFN,OADL,CAFe,CAAnB;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAcP,UAAd;AACAJ,MAAAA,SAAS,CAACI,UAAD,CAAT;AACC,KAXL;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMQ,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMpB,SAAS,CAACO,UAAV,CAAqB,QAArB,EAA+Bc,GAA/B,CAAmC;AACrCC,MAAAA,IAAI,EAAEnB,KAD+B;AAErCoB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAF0B;AAGrCC,MAAAA,SAAS,EAAExB,OAAO,CAACyB;AAHkB,KAAnC,CAAN;AAKAvB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD,CAjCwB,CA2CxB;;;AAEA,QAAMwB,QAAQ,GAAIT,KAAD,IAAW;AAC1B,UAAM;AACJU,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFX,KAFJ;AAGAf,IAAAA,QAAQ,CAAC0B,KAAD,CAAR;AACD,GALD;;AAMA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEZ,QAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEf,KADT;AAEE,QAAA,QAAQ,EAAEyB,QAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,SAAS,EAAE;AALb;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,gBACKvB,MAAM,CAACO,GAAP,CAAYT,KAAD,iBACZ,QAAE,KAAF;AAEI,QAAA,QAAQ,EAAEA,KAFd;AAGI,QAAA,OAAO,EAAGA,KAAK,CAACuB,SAAN,KAAoBxB,OAAO,CAACyB;AAH1C,SACcxB,KAAK,CAACW,EADpB;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzEH;;GAAMb,I;;KAAAA,I;AA0EJ,eAAeA,IAAf","sourcesContent":["import React,{ useState, useEffect }  from \"react\";\nimport { dbService } from \"fbase\";\n  {/* Comment out here */}\nconst Home = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n    /*\n    const getNweets = async () => {\n      // firebase database에서 \"nweets\"라는 collection를 가지고 온다. get()이라는 함수를 사용 \n      // https://firebase.google.com/docs/firestore/query-data/get-data\n      const dbNweets = await dbService.collection(\"nweets\").get(); \n      dbNweets.forEach((document) => {\n        // nweetObject를 만들어서 \n        const nweetObject = {\n          ...document.data(),\n          id: document.id,\n        };\n        setNweets( (prev) => [nweetObject, ...prev] );\n      });\n    };\n    */\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map\n            ( \n                (doc) => \n                    ({\n                        id: doc.id,\n                        ...doc.data(),\n                    })\n            );\n            console.log ( nweetArray)\n            setNweets(nweetArray);\n            });\n    }, []);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid            \n          });\n        setNweet(\"\");\n    };\n\n    //console.log(nweets);\n\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setNweet(value);\n    };\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}/>\n          <input type=\"submit\" value=\"Nweet\" />\n        </form>\n        <div>\n            {nweets.map((nweet) => (\n            < Nweet \n                key     ={nweet.id} \n                nweetObj={nweet} \n                isOwner ={nweet.creatorId === userObj.uid} \n            />\n        ))}\n      </div>\n      </div>\n    );\n  };\n  export default Home;\n"]},"metadata":{},"sourceType":"module"}