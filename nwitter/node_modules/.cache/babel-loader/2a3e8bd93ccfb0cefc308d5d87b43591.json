{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js\";\nimport React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n{\n  /* Comment out here */\n}\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    try {\n      const {\n        target: {\n          name\n        }\n      } = event;\n      let provider;\n\n      if (name === \"google\") {\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n      } else if (name === \"github\") {\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n      }\n\n      await authService.signInWithPopup(provider);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \" Continue with Google \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \" Continue with Github \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/minchulcho/Desktop/Web/ntwitterBeforeClean/ntwitter/nwitter/src/routes/Auth.js"],"names":["React","useState","authService","firebaseInstance","AuthForm","Auth","onSocialClick","event","target","name","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","error","setError","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACC;AAAC;AAAuB;;AACzB,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,QAAI;AACF,YAAM;AACJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AADJ,UAEFF,KAFJ;AAGA,UAAIG,QAAJ;;AACA,UAAID,IAAI,KAAK,QAAb,EAAuB;AACrBC,QAAAA,QAAQ,GAAG,IAAIP,gBAAgB,CAACQ,IAAjB,CAAsBC,kBAA1B,EAAX;AACD,OAFD,MAEO,IAAIH,IAAI,KAAK,QAAb,EAAuB;AAC5BC,QAAAA,QAAQ,GAAG,IAAIP,gBAAgB,CAACQ,IAAjB,CAAsBE,kBAA1B,EAAX;AACD;;AACD,YAAMX,WAAW,CAACY,eAAZ,CAA4BJ,QAA5B,CAAN;AAED,KAZD,CAYC,OAAMK,KAAN,EAAY;AACXC,MAAAA,QAAQ,CAACD,KAAK,CAACE,OAAP,CAAR;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEX,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CA7BD;;KAAMD,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n {/* Comment out here */}\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n      try { \n        const {\n          target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n          provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n        \n      }catch(error){\n        setError(error.message);\n      }\n    };\n\n    return (\n      <div>\n        <AuthForm />\n\n        <div>\n          <button onClick={onSocialClick} name=\"google\"> Continue with Google </button>\n          <button onClick={onSocialClick} name=\"github\"> Continue with Github </button>\n        </div>\n      </div>\n    );\n};\nexport default Auth;"]},"metadata":{},"sourceType":"module"}